{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Format billing data info",
  "Parameters": {
    "LambdaName": {
      "Type": "String",
      "Description": "Name of Lambda function",
      "Default": "aws-adm-billing-data-formatter"
    },
    "LambdaDescription": {
      "Type": "String",
      "Description": "Description of Lambda Function",
      "Default": "Format billing data for usage down pipe"
    },
    "LambdaHandler": {
      "Type": "String",
      "Description": "Lambda handler function name",
      "Default": "aws-adm-billing-data-formatter.handler"
    },
    "LambdaMemorySize": {
      "Type": "String",
      "Description": "Lambda memory size",
      "Default": "128"
    },
    "LambdaTimeout": {
      "Type": "String",
      "Description": "Lambda timeout",
      "Default": "30"
    },
    "DeployS3Bucket": {
      "Type": "String",
      "Description": "S3 bucket containing Lambda code."
    },
    "DeployS3Key": {
      "Type": "String",
      "Description": "S3 key of deployable code."
    },
    "BillingS3Bucket": {
      "Type": "String",
      "Description": "S3 Bucket containing billing info"
    },
    "UpdaterCFNStack": {
      "Type": "String",
      "Description": "Name of the updater CFN Stack."
    },
    "ServiceTagKey": {
      "Type": "String",
      "Description": "Name of tag for tracking service"
    },
    "ServiceTagValue": {
      "Type": "String",
      "Description": "Value of service tag."
    },
    "SnsPublishIamManagedPolicyArn": {
      "Type": "String",
      "Description": "ARN of IAM policy that allows publishing to SNS topic."
    },
    "SnsPublishingTopicArn": {
      "Type": "String",
      "Description": "SNS Topic ARN for publishing data"
    },
    "SnsSubscriptionTopicArn": {
      "Type": "String",
      "Description": "ARN of SNS topic for datastore messages."
    }
  },
  "Resources": {
    "LambdaIamRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": {
          "Fn::Sub": "Lambda-${LambdaName}"
        },
        "Path": "/service-role/",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "ManagedPolicyArns": [
          {
            "Ref": "SnsPublishIamManagedPolicyArn"
          }
        ]
      }
    },
    "LambdaIamPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "LambdaExecutionPolicy",
        "Roles": [
          {
            "Ref": "LambdaIamRole"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": "logs:CreateLogGroup",
              "Resource": {
                "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"
              }
            },
            {
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Resource": [
                {
                  "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${LambdaName}:*"
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:ListBucket"
              ],
              "Resource": [
                {
                  "Fn::Sub": "arn:aws:s3:::${BillingS3Bucket}"
                }
              ]
            }
          ]
        }
      }
    },
    "LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "DeployS3Bucket"
          },
          "S3Key": {
            "Ref": "DeployS3Key"
          }
        },
        "Description": {
          "Ref": "LambdaDescription"
        },
        "Environment": {
          "Variables": {
            "SNS_TOPIC_ARN": {
              "Ref": "SnsPublishingTopicArn"
            }
          }
        },
        "FunctionName": {
          "Ref": "LambdaName"
        },
        "Handler": {
          "Ref": "LambdaHandler"
        },
        "MemorySize": {
          "Ref": "LambdaMemorySize"
        },
        "Role": {
          "Fn::GetAtt": [
            "LambdaIamRole",
            "Arn"
          ]
        },
        "Runtime": "python3.6",
        "Timeout": {
          "Ref": "LambdaTimeout"
        },
        "Tags": [
          {
            "Key": {
              "Ref": "ServiceTagKey"
            },
            "Value": {
              "Ref": "ServiceTagValue"
            }
          }
        ]
      }
    },
    "LambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "LambdaFunction"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "sns.amazonaws.com"
      },
      "Condition": ""
    },
    "LambdaInvokeUpdater": {
      "Type": "Custom::LambdaUpdaterInvoke",
      "Properties": {
        "ServiceToken":{
          "Fn::ImportValue": {
            "Fn::Sub": "${UpdaterCFNStack}-LambdaFunctionArn"
          }
        },
        "FunctionName": {
          "Ref": "LambdaName"
        },
        "FunctionZipFileUrl": {
          "Fn::Sub": "https://s3.amazonaws.com/${DeployS3Bucket}/${DeployS3Key}"
        }
      },
      "DependsOn": [
        "LambdaFunction"
      ]
    },
    "SnsSubscription": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "TopicArn": {
          "Ref": "SnsSubscriptionTopicArn"
        },
        "Protocol": "lambda",
        "Endpoint": {
          "Fn::GetAtt": ["LambdaFunction", "Arn"]
        }
      },
      "DependsOn": [
        "LambdaIamRole",
        "LambdaIamPolicy"
      ]
    }
  },
  "Outputs": {
    "LambdaArn": {
      "Description": "Lambda Function ARN.",
      "Value": {
        "Fn::GetAtt": ["LambdaFunction", "Arn"]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-LambdaFunctionArn"
        }
      }
    },
    "LambdaCodeSha256": {
      "Description": "Lambda code SHA256.",
      "Value": ""
    },
    "TravisBuildNumber": {
      "Description": "Travis build number.",
      "Value": "0"
    }
  }
}
